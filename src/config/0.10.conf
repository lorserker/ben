[models]
# Model version 1 drops state for bidding, and introduce different system for NS and EW
# Model version 2 includes 4 bids when making the lookup
model_version = 2
use_bba = False
NS = -1
EW = -1
# Version of tensorflow to use
tf_version = 1

[contract]
# Not supported in TF 1.X

[bidding]
bidder = models/GIB/bidding_V2-3125000
info = models/GIB/binfo_V2-3125000
search_threshold = 0.10
# If there is bid above this threshold, make that bid ignoring other bids
no_search_threshold = 0.999

[adjustments]
# Are adjustments enabled
use_adjustment = True
# Add extra weigth on scores from neural network
# The score from NN is multiplied to this and added to expected score
adjust_NN = 50
# If it was difficult to find samples we increase the trust in the NN
adjust_NN_Few_Samples = 500
# subtract this from expected score before XX (Double if vulnerable)
adjust_XX = 200
# Subtract this from expected score before double in passout situation
# If not going 2 down, the udjustment is doubled
adjust_X = 100
# When bidding in the passout situation, we change the expected score
adjust_passout = -100
# When bidding in the passout and going negative, assume we are being doubled, so multiply the score by this
adjust_passout_negative = 3
# If we get some very low scores from the NN, then adjust by this
# Both will be tested, so a very low score will get both adjustments
adjust_min1 = 0.002
adjust_min2 = 0.0002
adjust_min1_by = 200
adjust_min2_by = 200

[lead]
lead_suit = models/lead_model_b/lead-1000000
lead_nt = models/lead_model_b/lead-1000000
lead_threshold = 0.05
# Lead this card suggested by neural network if prediction is over this value
lead_accept_nn = 0.99

[eval]
# Model for finding single dummy estimates provided an opening lead
single_dummy_estimator = models/lr3_model/lr3-1000000
# Model for finding single dummy estimates without opening lead
double_dummy_estimator = models/single_dummy/single_dummy-32768000
# use the following estimator, sde, dde or both
estimator = dde
# Use double dummy when estimating tricks during bidding - to slow if 200 samples
double_dummy_calculator = True

[cardplay]
include_opening_lead = False
lefty_nt = models/lefty_model/lefty-1000000
dummy_nt = models/dummy_model/dummy-920000
righty_nt = models/righty_model/righty-1000000
decl_nt = models/decl_model/decl-1000000
lefty_suit = models/lefty_model/lefty-1000000
dummy_suit = models/dummy_model/dummy-920000
righty_suit = models/righty_model/righty-1000000
decl_suit = models/decl_model/decl-1000000
# Number of samples when playing the hand
sample_hands_play = 100
# Minimum number of boards we wan sample
min_sample_hands_play = 20
# Number of samples we will generate to find sample_hands_play
sample_boards_for_play = 5000
# Should possible claim be calculated
claim = False

[sampling]
# If bid selected directly by Neural net, then save time dropping generating samples
no_samples_when_no_search = True
# Filter to remove hands, where the opening lead was not suggested by the neural network
# Can be disabled by setting it to zero
lead_accept_threshold = 0.01
# If we play with our normal partner we can add som trust to the lead
# Setting it to high will reduce the samples and thus getting bad samples
lead_accept_threshold_partner_trust = 0.05
# Filter to remove hands, where we do not trust the bidding. Used when sampling hands during bidding
#use_distance = False
#bidding_threshold_sampling = 0.25
#bid_accept_threshold_bidding = 0.20
# This is calculated using euclidian distance, so 0.33 could be one of the 3 bids in a bidding round matching
use_distance = True
bidding_threshold_sampling = 0.70
bid_accept_threshold_bidding = 0.40
# Filter to remove hands not consistent with the bidding. Used during play
bid_accept_play_threshold = 0.4

# Filter to remove hands, where the play is inconsistent with the sample
play_accept_threshold = 0.03
play_accept_threshold_partner = 0.1
# If we dont find enough samples, then include down to this threshold. Used during play
bid_extend_play_threshold = 0.10
# Number hands where we will calculate scores for when bidding
sample_hands_auction = 200
# The number of hands we will generate to find sample_hands_auction
sample_boards_for_auction = 10000
# Minimum number of hands when caclulating scores in the bidding
min_sample_hands_auction = 10
# If we dont find enough samples, then include down to this threshold. Used during bidding
bid_extend_bid_threshold = 0.01
# How many boards should we sample to find the number of samples below
sample_boards_for_auction_opening_lead = 20000
# Number of samples made, when finding the opening lead
sample_hands_opening_lead = 200
# Max number of samples to include when reviewing a board
sample_hands_for_review = 20
