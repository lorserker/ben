[models]
name = Default
# Model version 1 drops state for bidding, and introduce different system for NS and EW
# Model version 2 includes 4 bids when making the lookup
# Model version 3 include alerts
model_version = 3
# Small cards (pips) are grouped, so when bidding we have AKQJTx
n_cards_bidding = 24
# During play we have AKQJT98x
n_cards_play = 32

# Version of tensorflow to use
tf_version = 1
# No NS or EW in model
NS = -1
EW = -1
# If using BBA the following NS and EW must match BBA's systems (0 =2/1, 1=SAYC, 2=WJ, 3=PC, 4=Acol)
use_bba = False
# Use SAYC in BBA
bba_our_cc = BBA/CC/BEN-21GF.bbsa
bba_their_cc = BBA/CC/BEN-21GF.bbsa

[contract]
# Not supported in TF 1.X

[bidding]
#bidder = models/GIB/2024-07-06_bidding_V2-3114000
bidder = scripts/training/bidding/model/Test_2024-08-21-2288000 
info = models/GIB/binfo_V2-1420000
# If there are multiple bids over this threshold make a simulation for the bids
search_threshold = -1
# If there is bid above this threshold, make that bid ignoring other bids
no_search_threshold = 0.999
# Evaluate min_passout_candidates bids if auction longer than this. Setting to -1 will disable
eval_after_bid_count = 12
# If False the opening bid will be without simulation, even with multiple candidates
eval_opening_bid = False
# Add Pass as a bid to evaluate after this number of bids
eval_pass_after_bid_count = 12
# Minimum number of candidates examined in the passout situation
min_passout_candidates = 2
# Use bidding quality in evaluation (if not good just use neural network)
use_biddingquality = True
# Upvote the samples that matches the bidding best - used when double dummy results are calculated during play
use_probability = True
# Before the final pass validate the contract with a neural network
check_final_contract = True
# How many samples checked
max_samples_checked = 20
# Minimum gain for making a rescue bid
min_rescue_reward = 250
# Max expected score to evaluate rescue bid
max_estimated_score = 300
# Alert implemented in bidding model
alert_supported = True

[adjustments]
# Are adjustments enabled
use_adjustment = True
# Add extra weigth on scores from neural network
# The score from NN is multiplied to this and added to expected score
adjust_NN = 50
# If it was difficult to find samples we increase the trust in the NN
adjust_NN_Few_Samples = 500
# subtract this from expected score before XX (Double if vulnerable)
adjust_XX = 200
# Subtract this from expected score before double in passout situation
# If not going 2 down, the adjustment is doubled
adjust_X = 100
# When bidding in the passout situation, we change the expected score
adjust_passout = -100
# When bidding in the passout and going negative, assume we are being doubled, so multiply the score by this
adjust_passout_negative = 3
# If we get some very low scores from the NN, then adjust by this
# Both will be tested, so a very low score will get both adjustments
adjust_min1 = 0.002
adjust_min2 = 0.0002
adjust_min1_by = 200
adjust_min2_by = 200

[lead]
lead_suit = models/leadack_lead_suit-154000
lead_nt = models/leadack_lead_nt-59000
# Ignore cards as opening lead below this value from the neural network
lead_threshold = 0.20
# Lead this card suggested by neural network if prediction is over this value
lead_accept_nn = 0.999
# Use double dummy statistics when evaluating the opening lead - default is single dummy
double_dummy = True
# Force a minimum number of leads to consider - overrides lead_threshold
min_opening_leads = 3
# Opening lead agreement (random, attitude, 135 or 24)
lead_from_pips_nt = random
lead_from_pips_suit = random

[eval]
# Model for finding single dummy estimates provided an opening lead
single_dummy_estimator = models/lr3_model/lr3-1000000
# Model for finding single dummy estimates without opening lead
double_dummy_estimator = models/single_dummy/single_dummy-32768000
# use the following estimator, sde, dde or both
estimator = dde
# Use double dummy when estimating tricks during bidding - to slow if 200 samples
double_dummy_calculator = False

[cardplay]
# This is telling if opening lead is included in the neural net for lefty
opening_lead_included = True
lefty_nt = models/playing/lefty_nt-475000
dummy_nt = models/playing/dummy_nt-475000
righty_nt = models/playing/righty_nt-475000
decl_nt = models/playing/decl_nt-475000
lefty_suit = models/playing/lefty_suit-999000
dummy_suit = models/playing/dummy_suit-999000
righty_suit = models/playing/righty_suit-999000
decl_suit = models/playing/decl_suit-999000
# Number of samples when playing the hand
sample_hands_play = 200
# Minimum number of boards we want returned for sampling during play
min_sample_hands_play = 10
# Minimum number of boards we want returned for sampling during play
min_sample_hands_play_bad = 12
# Number of samples we will generate to find sample_hands_play
sample_boards_for_play = 1000
# Should possible claim be calculated
claim = False

[sampling]
# When sampling we use bidding_info as a guide, and these control how to adjust bidding_info after a card given to a hand
# Multiplied to the hcp-value of the card
hcp_reduction_factor = 0.83
# when a card is given subtract this from the shape, to reduce odds it get more in that suit            
shp_reduction_factor = 0.5
# If bid selected directly by Neural net, then save time dropping generating samples
no_samples_when_no_search = True
# Filter to remove hands, where the opening lead was not suggested by the neural network
# Can be disabled by setting it to zero
lead_accept_threshold = 0.03
# If we play with our normal partner we can add som trust to the lead
# Setting it to high will reduce the samples and thus getting bad samples
lead_accept_threshold_partner_trust = 0.05
# Filter to remove hands, where we do not trust the bidding. Used when sampling hands during bidding
#use_distance = False
#bidding_threshold_sampling = 0.25
#bid_accept_threshold_bidding = 0.20
# This is calculated using euclidian distance, so 0.33 could be one of the 3 bids in a bidding round matching
use_distance = True
bidding_threshold_sampling = 0.70
bid_accept_threshold_bidding = 0.40
# Filter to remove hands not consistent with the bidding. Used during play
bid_accept_play_threshold = 0.40

# Filter to remove hands, where the play is inconsistent with the sample
play_accept_threshold = 0.02
# If we dont find enough samples, then include down to this threshold. Used during play
bid_extend_play_threshold = 0.10
# Number hands where we will calculate scores for when bidding
sample_hands_auction = 200
# The number of hands we will generate to find sample_hands_auction
sample_boards_for_auction = 5000
# Minimum number of hands when caclulating scores in the bidding
min_sample_hands_auction = 20
# If we dont find enough samples, then include down to this threshold. Used during bidding
bid_extend_bid_threshold = 0.01
# How many boards should we sample to find the number of samples below
sample_boards_for_auction_opening_lead = 50000
# Number of samples made, when finding the opening lead
sample_hands_opening_lead = 200
# Max number of samples to include when reviewing a board
sample_hands_for_review = 20
